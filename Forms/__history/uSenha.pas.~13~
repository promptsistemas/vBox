unit uSenha;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, jpeg, ExtCtrls, StdCtrls, Buttons,DB, Vcl.Imaging.pngimage;

type
  TfrmSenha = class(TForm)
    Label1: TLabel;
    ValorNome: TEdit;
    Label2: TLabel;
    ValorSenha: TEdit;
    BitBtn1: TBitBtn;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    Panel1: TPanel;
    Image1: TImage;
    Image2: TImage;
    Panel2: TPanel;
    Image3: TImage;
    Image4: TImage;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure SpeedButton2Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure BitBtn1Click(Sender: TObject);
    procedure BtnOKClick(Sender: TObject);
    procedure BtnCancelarClick(Sender: TObject);
  private
    { Private declarations }
     Procedure verificaUser;
  public
    { Public declarations }
   Fecha : Boolean;
  end;

var
  frmSenha: TfrmSenha;
  Login: TfrmSenha;
  Seg,Seg2,HResult: double;
  H1: ttime;
  tentativas: Smallint;
var
 NrTentativas : integer;  
implementation



{$R *.dfm}

uses uMenu, uDM, U_LIB;

procedure TfrmSenha.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    selectnext(activecontrol, true, true);
    Key := #0;
  end;
end;

procedure TfrmSenha.SpeedButton2Click(Sender: TObject);
var
mensagem: string;
begin
  frmMenu.bSenha := False;
    if ValorNome.Text <> '' then
    begin
      with DM do
      begin
        CDSDINAMICA.Close;
        cdsDinamica.IndexFieldNames:='';
        CDSDINAMICA.CommandText := ('SELECT * FROM TB_USUARIOS');
        CDSDINAMICA.Open;
        if CDSDINAMICA.Locate('LOGIN', ValorNome.Text, []) then
        begin
          if DecryptMsg(CDSDINAMICA.FieldByName('SENHA').AsString,10) <> ValorSenha.Text then
          begin
            Application.MessageBox('Senha inválida, tente novamente.', 'Atenção', MB_ICONWarning);
            inc(tentativas); //Incrementa em 1 o valor da variável tentativas
            if tentativas < 3 then
            begin
              MessageDlg(Format('Tentativa %d de 3', [tentativas]), mtError, [mbOk], 0);
              if ValorSenha.CanFocus then
                    ValorSenha.SetFocus;
              end
              else
              begin
                MessageDlg(Format('%dª tentativa de acesso ao sistema.',
                    [tentativas]) + #13 + 'A aplicação será fechada!', mtError,[mbOk], 0);
                 ModalResult := mrCancel;
                 Application.Terminate;
            end;
          end
          else
          begin
            frmMenu.bSenha := True;
            frmMenu.recInformacoes.login           := CDSDINAMICA.FieldByname('LOGIN').AsString;
            frmMenu.recInformacoes.Id_Usuario      := CDSDINAMICA.FieldByname('ID_USUARIO').AsInteger;
            frmMenu.recInformacoes.Nivel           := CDSDINAMICA.FieldByname('NIVEL').AsInteger;
            Close;
          end;
        end
        else
        begin
          Application.MessageBox('Usuário não cadastrado/autorizado.', 'Atenção', MB_ICONWarning);
          NrTentativas := NrTentativas +1;
          if NrTentativas = 3 then
          begin
            ShowMessage('Número de tentativas ultrapassadas');
            Application.Terminate;
          end
          else
          begin
           ValorNome.SetFocus;
          end;
        end;
      end;
    end
    else
    begin
      Application.MessageBox('É necessário informar um usuário.', 'Atenção', MB_ICONWarning);
        NrTentativas := NrTentativas +1;
        if NrTentativas = 3 then
        begin
          ShowMessage('Número de tentativas ultrapassadas');
          Close;
          Exit;
        end
        else
        begin
         ValorNome.SetFocus;
        end;
    end;

end;

procedure TfrmSenha.FormShow(Sender: TObject);
begin
  ValorNome.SetFocus;
end;

procedure TfrmSenha.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if NrTentativas = 3 then
  begin
    Close;
    frmMenu.Close;
    exit;
  end
  else
  begin
    if (ValorNome.Text <> '') and (frmMenu.bSenha = False) then
    begin
      Action := caNone;
      SpeedButton2Click(Self);
    end
    else if (ValorNome.Text = '') then
    begin
      if (Application.MessageBox('Voce não informou um usuário, deseja encerrar a pliacação.',
        'Confirmação', MB_ICONQuestion+MB_YESNO) = IDYES) then
      begin
        Action := caFree;
        frmMenu.Close;
      end
      else
      begin
        Action := caNone;
        ValorNome.SetFocus;
      end;
    end
    else
    begin
      Action := caFree;
    end;
  end;

end;

procedure TfrmSenha.BitBtn1Click(Sender: TObject);
begin
//  Application.Terminate;
  if ValorNome.Text = '' then
  begin
    ShowMessage('Favor Informe o Nome de Usuário');
    ValorNome.SetFocus;
  end
  else
  begin
    verificaUser;
  end;
end;

procedure TfrmSenha.BtnOKClick(Sender: TObject);
var
mensagem: string;
begin
    frmMenu.bSenha := False;
    DM.cdsDinamica.Close;
    if ValorNome.Text <> '' then
    begin
      with DM do
      begin
        cdsDinamica.Close;
        cdsDinamica.IndexFieldNames:='';
        cdsDinamica.CommandText := ('SELECT * FROM TB_USUARIO');
        cdsDinamica.Open;
        if cdsDinamica.Locate('LOGIN', ValorNome.Text, []) then
        begin
          if DecryptMsg(CDSDINAMICA.FieldByName('SENHA').AsString,18) <> ValorSenha.Text then
          begin
            Application.MessageBox('Senha inválida, tente novamente.', 'Atenção', MB_ICONWarning);
            inc(tentativas); //Incrementa em 1 o valor da variável tentativas
            if tentativas < 3 then
            begin
              MessageDlg(Format('Tentativa %d de 3', [tentativas]), mtError, [mbOk], 0);
              if ValorSenha.CanFocus then
                    ValorSenha.SetFocus;
              end
              else
              begin
                MessageDlg(Format('%dª tentativa de acesso ao sistema.',
                    [tentativas]) + #13 + 'A aplicação será fechada!', mtError,[mbOk], 0);
                 ModalResult := mrCancel;
                 Application.Terminate;
            end;
          end
          else
          begin
            frmMenu.bSenha                         := True;
            frmMenu.recInformacoes.login           := CDSDINAMICA.FieldByname('LOGIN').AsString;
            frmMenu.recInformacoes.Id_Usuario      := CDSDINAMICA.FieldByname('ID_USUARIO').AsInteger;
            frmMenu.recInformacoes.Nivel           := CDSDINAMICA.FieldByname('NIVEL').AsInteger;
            Close;
          end;
        end
        else
        begin
          Application.MessageBox('Usuário não cadastrado/autorizado.', 'Atenção', MB_ICONWarning);
            inc(tentativas); //Incrementa em 1 o valor da variável tentativas
            if tentativas < 3 then
            begin
              MessageDlg(Format('Tentativa %d de 3', [tentativas]), mtError, [mbOk], 0);
              if ValorSenha.CanFocus then
                    ValorSenha.SetFocus;
              end
              else
              begin
                MessageDlg(Format('%dª tentativa de acesso ao sistema.',
                    [tentativas]) + #13 + 'A aplicação será fechada!', mtError,[mbOk], 0);
                 ModalResult := mrCancel;
                 Application.Terminate;

              end;
            end;
        end;
    end
    else
    begin
      Application.MessageBox('É necessário informar um usuário.', 'Atenção', MB_ICONWarning);
      inc(tentativas); //Incrementa em 1 o valor da variável tentativas
      if tentativas < 3 then
      begin
        MessageDlg(Format('Tentativa %d de 3', [tentativas]), mtError, [mbOk], 0);
        if ValorSenha.CanFocus then
              ValorSenha.SetFocus;
        end
        else
        begin
          MessageDlg(Format('%dª tentativa de acesso ao sistema.',
              [tentativas]) + #13 + 'A aplicação será fechada!', mtError,[mbOk], 0);
           ModalResult := mrCancel;
           Application.Terminate;
        end;
      end;
end;

procedure TfrmSenha.BtnCancelarClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmSenha.verificaUser;
begin
  DM.cdsDinamica.Close;
  DM.cdsDinamica.IndexFieldNames:='';
  DM.cdsDinamica.CommandText := ' SELECT * FROM TB_USUARIO ';
  DM.cdsDinamica.Open;

  if DM.cdsDinamica.Locate('LOGIN', ValorNome.Text, []) then
  begin
    //frmTrocarSenha.ShowModal;
  end
  else
  begin
    ShowMessage('Usuario Não Encontrado');
    inc(tentativas); //Incrementa em 1 o valor da variável tentativas
    if tentativas < 3 then
    begin
      MessageDlg(Format('Tentativa %d de 3', [tentativas]), mtError, [mbOk], 0);
      if ValorSenha.CanFocus then
            ValorSenha.SetFocus;
      end
      else
      begin
        MessageDlg(Format('%dª tentativa de acesso ao sistema.',
            [tentativas]) + #13 + 'A aplicação será fechada!', mtError,[mbOk], 0);
         ModalResult := mrCancel;
      end;
  end;

end;

end.
